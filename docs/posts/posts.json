[
  {
    "path": "posts/2021-04-18-predicting-na-values/",
    "title": "Predicting Missing Values",
    "description": "Analising forest inventory data and predicting NAs through least squares regression model",
    "author": [
      {
        "name": "Gabriel de Freitas Pereira",
        "url": {}
      }
    ],
    "date": "2021-04-18",
    "categories": [],
    "contents": "\r\n  The sistematic collection of data was carried out between 2017 and 2018 at Três Lagoas, which is a city from Mato Grosso do Sul state. The area has an extent of 1226 acres of Eucalyptus grandis W. Hill ex Maiden x Eucalyptus urophylla S. T. Blake clonal culture with mean age of 2.88 years.\r\n\r\n\r\n\r\nExploring the data\r\n   \r\n  Here we can take a look on the first 6 rows from the data frame which has 3313 obs. of 6 variables:\r\n\r\n\r\narea(ha)\r\n\r\n\r\nspacing\r\n\r\n\r\ngenetic material\r\n\r\n\r\nage\r\n\r\n\r\nDBH\r\n\r\n\r\nheigth\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n12.16\r\n\r\n\r\n16.98621\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n11.52\r\n\r\n\r\n16.61542\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n12.00\r\n\r\n\r\n16.89602\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n11.87\r\n\r\n\r\n16.82587\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n11.33\r\n\r\n\r\n16.49516\r\n\r\n\r\n42.43\r\n\r\n\r\n3,45X2,40\r\n\r\n\r\n35\r\n\r\n\r\n2.839151\r\n\r\n\r\n12.45\r\n\r\n\r\n17.13653\r\n\r\n\r\n   \r\nChecking whether we have got NAs or not:\r\n\r\n\r\nsum(is.na(fustes_6$DBH))\r\n\r\n\r\n[1] 134\r\n\r\n   \r\n  As we can see there are 134 NAs from DBH values that probably represent dead trees, that can be replanted in the future for next rotation. But just to be sure about it, let’s take a look on the age (or height)! Because if those NAs values also could be trees too much young for DBH.\r\n\r\n\r\nmin(fustes_6$age)\r\n\r\n\r\n[1] 2.811773\r\n\r\n   \r\n  The minimum age turns out the idea of NAs are representing dead trees. Therefore if we would like to get a second rotation forestry would be good to understand the behavior of trees under similar conditions to do future economic analysis. So what would we expect from these trees if they were alive?  \r\n  We can make an approximation through least squares regression model based on our data and variables to find out their diameter at breast height! And for that we need to pre-process the data…    \r\nData pre-processing\r\n   \r\nChecking whether we have got outliers on DBH or not:\r\n\r\n\r\n\r\n  As we can see, there are outliers on the data that we want to remove because it’s not good for least squares regression model. The result bellow show us the lower extreme, first quartile, median, third quartile and the upper extreme respectively.\r\n\r\n\r\nboxplot.stats(fustes_6$DBH)\r\n\r\n\r\n$stats\r\n[1]  8.820 11.585 12.510 13.430 16.180\r\n\r\n$n\r\n[1] 3179\r\n\r\n$conf\r\n[1] 12.4583 12.5617\r\n\r\n$out\r\n  [1]  8.63  8.63  6.14 17.03  7.03  6.88  7.99 17.22  6.81  5.44\r\n [11]  8.28  8.53  8.15  7.70  8.63  8.44  6.33  8.69  8.47 16.27\r\n [21]  7.19  7.48  6.43  5.98  6.21  8.37  8.18  5.28 16.71 16.65\r\n [31]  6.97 17.67 17.51 16.36  8.05  8.47  8.75  8.47  8.34  8.75\r\n [41]  6.62  7.58  6.02  5.67  6.43  6.75  8.66  8.40  6.81  8.59\r\n [51]  4.90  7.77  7.73  8.72  6.43  8.21  8.31  8.53  7.99  7.00\r\n [61]  7.93  5.60 16.36  8.15 18.24  8.56 18.02 16.97  8.37  7.54\r\n [71]  8.75  7.42 16.93 17.44 19.67 17.86 17.19  6.37 16.74  7.89\r\n [81] 16.36 18.49  6.02  8.69  7.19  8.09  8.21  5.98  7.51 16.52\r\n [91]  8.79  7.80  7.66  8.58  8.73  7.15  7.06  8.79  7.83  7.14\r\n[101]  5.68  7.73  7.90 16.45 16.64  8.75 17.17  7.28  6.41  6.96\r\n[111]  8.46  8.39  7.80  8.46  8.69  7.35  7.83  7.62  7.62 16.71\r\n[121]  5.31  7.74  8.53  7.44 16.71  6.34  5.50  7.65\r\n\r\n   \r\nAutomating the process to get the extreme values:\r\n\r\n\r\nupper_whisker <- boxplot.stats(fustes_6$DBH)$stats[5]\r\nlower_whisker <- boxplot.stats(fustes_6$DBH)$stats[1]\r\n\r\n\r\n\r\n   \r\nOf course after the upper extreme we’ve got the outliers and before the first whisker as well. And both we are going to remove this way:\r\n\r\n\r\noutlier_filter_upper <- fustes_6$DBH < upper_whisker \r\noutlier_filter_lower <- fustes_6$DBH > lower_whisker \r\n\r\n#filtering outliers: \r\noutlier_filter <- fustes_6[outlier_filter_lower & outlier_filter_upper,]\r\n\r\n\r\n\r\n   \r\nNow we need to check the class from the variables and if necessary make some changes\r\n\r\n\r\nstr(fustes_6)\r\n\r\n\r\n'data.frame':   3313 obs. of  6 variables:\r\n $ area(ha)        : num  42.4 42.4 42.4 42.4 42.4 ...\r\n $ spacing         : chr  \"3,45X2,40\" \"3,45X2,40\" \"3,45X2,40\" \"3,45X2,40\" ...\r\n $ genetic material: int  35 35 35 35 35 35 35 35 35 35 ...\r\n $ age             : num  2.84 2.84 2.84 2.84 2.84 ...\r\n $ DBH             : num  12.2 11.5 12 11.9 11.3 ...\r\n $ heigth          : num  17 16.6 16.9 16.8 16.5 ...\r\n\r\n   \r\nCategorical casting for the variables that we will use to predict\r\n\r\n\r\nfustes_6$`genetic material` <- as.factor(fustes_6$`genetic material`)\r\n\r\n\r\n\r\n   \r\nBuilding the model\r\n   \r\nOur formula has the following format: y = b0 + b1X\r\n\r\n\r\ndbh_equation <- \"DBH ~ `genetic material` + age\"\r\n\r\n\r\n\r\n   \r\nLeast squares regression:\r\n\r\n\r\ndbh_model <- lm(\r\n  formula = dbh_equation, \r\n  data = fustes_6[outlier_filter_lower & outlier_filter_upper,]\r\n)\r\n\r\n\r\n\r\n   \r\nNow we are going to isolate the NA values (that we want to predict) and all the columns that we are using to get DBH values:\r\n\r\n\r\ndbh_rows <- fustes_6[is.na(fustes_6$DBH), c(\"genetic material\",\"age\")]\r\n\r\n\r\n\r\n   \r\nThe last step is to predict and replace those missing values\r\n\r\n\r\ndbh_predictions <- predict(dbh_model, newdata = dbh_rows)\r\ndbh_predictions\r\n\r\n\r\n      22       80      122      163      175      181      187 \r\n12.36805 12.29624 12.25223 12.25223 12.25223 12.89461 12.89461 \r\n     209      219      324      328      357      378      421 \r\n12.89461 12.89461 12.18041 12.18041 12.43690 12.43690 12.96643 \r\n     448      455      564      576      588      601      602 \r\n12.96643 12.96643 12.74072 12.67917 12.67917 12.67917 12.67917 \r\n     608      627      628      686      694      695      718 \r\n12.67917 12.62454 12.62454 12.76124 12.76124 12.76124 12.76124 \r\n     776      793      831      859      866      869      879 \r\n12.23060 12.27572 12.27572 12.40501 12.40501 12.40501 12.40501 \r\n     886      887      889      891      905      962      990 \r\n12.40501 12.40501 12.40501 12.40501 12.47683 12.74702 12.74702 \r\n    1009     1027     1036     1045     1057     1060     1124 \r\n12.66891 12.66891 12.66891 12.66891 12.66891 12.66891 12.31676 \r\n    1211     1212     1281     1291     1292     1293     1352 \r\n12.68943 12.68943 12.48091 12.97669 12.97669 12.97669 12.60402 \r\n    1427     1471     1475     1479     1480     1481     1490 \r\n12.93565 12.88436 12.88436 12.88436 12.88436 12.88436 12.88436 \r\n    1491     1496     1498     1501     1503     1504     1509 \r\n12.88436 12.88436 12.88436 12.88436 12.88436 12.88436 12.88436 \r\n    1563     1624     1626     1627     1628     1629     1630 \r\n12.83998 12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 \r\n    1631     1636     1642     1643     1646     1647     1648 \r\n12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 \r\n    1649     1650     1651     1660     1662     1663     1664 \r\n12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 \r\n    1665     1668     1669     1670     1671     1676     1677 \r\n12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 12.97669 \r\n    1678     1679     1711     1748     1777     1781     1782 \r\n12.97669 12.97669 12.13938 12.14964 12.14964 12.14964 12.14964 \r\n    1788     1791     1794     1873     1886     1923     1924 \r\n12.14964 12.14964 12.14964 12.33728 12.33728 12.34754 12.34754 \r\n    1942     1943     1967     1973     1982     2003     2006 \r\n12.34754 12.34754 12.34754 12.90487 12.90487 12.90487 12.90487 \r\n    2007     2042     2043     2090     2095     2139     2145 \r\n12.90487 12.74072 12.74072 12.26138 12.26138 12.88436 12.88436 \r\n    2200     2201     2208     2226     2400     2626     2799 \r\n12.30650 12.30650 12.30650 12.30650 12.67917 12.38857 12.87410 \r\n    2826 \r\n12.87410 \r\n\r\nFilling the data with predicted values:\r\n\r\n\r\nfustes_6[is.na(fustes_6$DBH), \"DBH\"] <- dbh_predictions\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-18-predicting-na-values/predicting-na-values_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2021-04-20T03:24:55-03:00",
    "input_file": "predicting-na-values.utf8.md"
  },
  {
    "path": "posts/2021-02-18-visualizing-maps-interactively/",
    "title": "Visualizing Maps Interactively",
    "description": "My first shiny app! \nUsing the results from ensemble models of my scientific initiation\nto define the priority areas for conservation of Brazil nut",
    "author": [
      {
        "name": "Gabriel de Freitas Pereira",
        "url": {}
      }
    ],
    "date": "2021-02-18",
    "categories": [],
    "contents": "\r\n \r\n \r\n\r\nVisualizing maps in a simple way\r\n\r\n \r\n \r\nIntroduction\r\n   \r\n  First of all, what made me get started and learn shiny was the facility provided by the app for visualization. This is quite useful when you’ve got an amount of data to visualize and compare. Of course any GIS software is enough to do this job! But it’s not easy to handle and share a set of maps keeping the interactivity from them so that’s why I was searching how to make it properly. And everyone that I know would rather enjoy beautiful interactive graphics or maps to analyse the data. I think this is the best way to deal with the results, it is always good to simplify the visualization before studying it further theoretically.  \r\n  Well, the maps analysed were results from a prediction made by ensemble models to find out the priority areas for conservation of Bertholletia excelsa using different filters (environmental and geographical) based on 15 variables defined as the best in predicting the suitability of Brazil nut by Daiana tourne et. al 2019 on her doctorate degree using principal component analyses (PCA) combined with expert analyses.  \r\n  Therefore the main objective is directly correlated with the climatic analyses and soon we will combine with genetic analyses. These results presented here are considering the actual conditions using the variables from different databases as Worldclim, USGS, etc. More details about the research will be posted in a formal article in the future when it gets ready. Is important to say that in this research I have got 3 co-authors from Bioversity International which are: Evert Thomas, Tobias Fremout and Viviana Ceccarelli. Besides them Daiana also is helping in this project as well as my advisor Karina Martins.  \r\n  The shiny app has a good and organized structure quite easy to understand which helped me a lot to generate the app. However I didn’t use packages as Golem to provide a code cleaner so it was a robust script which I have written without using modules, because although the app has a clear structure and easy to apply modules I wasn’t familiar with it.\r\n \r\n \r\nExploring the maps\r\n   \r\n  The app has 6 tabs with different filters and content as you can see below:\r\nSuitability - Environmental filtering\r\nCount - Environmental filtering\r\nBinary - Environmental filtering\r\nSuitability - Geographical filtering\r\nCount - Geographical filtering\r\nBinary - Geographical filtering\r\n\r\n\r\n  So as I said before the model is an ensemble of different algorithms (MAXENT, RF, GLMNET, etc). Each of these algorithms produces a different presence map. The suitability map shows us the probability (0-1000) to get the presence of the species occurring at the site assuming a specific threshold based on the model filter which could be Environmental or Geographical. The count map indicates how many algorithms predict suitable a point, from 0 algorithms to 8 algorithms which is the maximum number of algorithms which predict suitable the same grid from 10 algorithms used in the ensemble initially. And last but not least the binary map shows us absence and presence (0-1) also considering the same threshold for suitability map.    \r\nI will leave here the Shiny app if you would like to take a look further.\r\n\r\n\r\n\r\n",
    "preview": "https://github.com/Gabrielforest/portfolio/blob/main/previewblog.PNG?raw=true",
    "last_modified": "2021-03-21T20:08:40-03:00",
    "input_file": "visualizing-maps-interactively.utf8.md"
  }
]
